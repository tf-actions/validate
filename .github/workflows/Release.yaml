name: Release
on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"

      - name: Install dependencies
        run: npm clean-install

      - name: Verify the integrity of provenance attestations and registry signatures for installed dependencies
        run: npm audit signatures

      - name: Release
        id: release
        uses: cycjimmy/semantic-release-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Git Tags
        if: steps.release.outputs.new_release_published == 'true'
        run: |
          major=${{steps.release.outputs.new_release_major_version}}
          minor=${{steps.release.outputs.new_release_minor_version}}

          # Configure Git
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'

          # major.minor
          tag=$(printf 'v%d.%d' $major $minor)
          git tag -fa $tag -m "Version $tag"
          git push origin $tag --force

          # major only
          tag=$(printf 'v%d' $major)
          git tag -fa $tag -m "Version $tag"
          git push origin $tag --force

name: Release
on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
      - name: Install dependencies
        run: npm clean-install
      - name: Verify the integrity of provenance attestations and registry signatures for installed dependencies
        run: npm audit signatures
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npx semantic-release

      - name: Update SemVer Tags
        run: |
          version=$(npx -c 'echo "$npm_package_version"')

          # Only move if the current commit is tagged
          if git tag -l | grep -Fqx -- "v$version"; then
            parts=(${version//./ })

            git config user.name 'github-actions[bot]'
            git config user.email 'github-actions[bot]@users.noreply.github.com'

            git tag -fa $(printf 'v%d.%d' $parts) -m "Version $(printf 'v%d.%d' $parts)"
            git tag -fa $(printf 'v%d' $parts) -m "Version $(printf 'v%d' $parts)"
            git push origin --tags
          fi
